-- macOS Style UI Library (Anime Vanguards Style)
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local Library = {}
Library.Flags = {}

-- Colors
local Colors = {
    Background = Color3.fromRGB(25, 25, 28),
    Sidebar = Color3.fromRGB(20, 20, 23),
    SidebarHover = Color3.fromRGB(35, 35, 38),
    Selected = Color3.fromRGB(236, 72, 153),
    Element = Color3.fromRGB(35, 35, 38),
    TopBar = Color3.fromRGB(30, 30, 33),
    Text = Color3.fromRGB(255, 255, 255),
    TextDark = Color3.fromRGB(160, 160, 165),
    Accent = Color3.fromRGB(59, 130, 246),
    Border = Color3.fromRGB(45, 45, 48)
}

-- Tween
local function Tween(obj, props, duration)
    TweenService:Create(obj, TweenInfo.new(duration or 0.2, Enum.EasingStyle.Quad), props):Play()
end

-- Create Window
function Library:CreateWindow(title)
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "MacOSUI"
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    
    pcall(function()
        if gethui then
            ScreenGui.Parent = gethui()
        else
            ScreenGui.Parent = game.CoreGui
        end
    end)
    
    if not ScreenGui.Parent then
        ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    end
    
    -- Main
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Colors.Background
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 900, 0, 550)
    Main.ClipsDescendants = true
    Main.Active = true
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 10)
    MainCorner.Parent = Main
    
    -- TopBar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundColor3 = Colors.TopBar
    TopBar.BorderSizePixel = 0
    TopBar.Size = UDim2.new(1, 0, 0, 50)
    
    local TopCorner = Instance.new("UICorner")
    TopCorner.CornerRadius = UDim.new(0, 10)
    TopCorner.Parent = TopBar
    
    local TopFix = Instance.new("Frame")
    TopFix.Parent = TopBar
    TopFix.BackgroundColor3 = Colors.TopBar
    TopFix.BorderSizePixel = 0
    TopFix.Position = UDim2.new(0, 0, 1, -10)
    TopFix.Size = UDim2.new(1, 0, 0, 10)
    
    -- Window Buttons
    local function createDot(color, pos)
        local dot = Instance.new("Frame")
        dot.Parent = TopBar
        dot.BackgroundColor3 = color
        dot.BorderSizePixel = 0
        dot.Position = UDim2.new(0, pos, 0, 15)
        dot.Size = UDim2.new(0, 12, 0, 12)
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = dot
        
        local btn = Instance.new("TextButton")
        btn.Parent = dot
        btn.BackgroundTransparency = 1
        btn.Size = UDim2.new(1, 0, 1, 0)
        btn.Text = ""
        
        return btn
    end
    
    local CloseBtn = createDot(Color3.fromRGB(255, 95, 87), 15)
    local MinBtn = createDot(Color3.fromRGB(255, 189, 68), 35)
    local MaxBtn = createDot(Color3.fromRGB(40, 201, 64), 55)
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Parent = TopBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 80, 0, 0)
    Title.Size = UDim2.new(0, 300, 0, 30)
    Title.Font = Enum.Font.GothamBold
    Title.Text = title or "Anime Vanguards [Premium]"
    Title.TextColor3 = Colors.Text
    Title.TextSize = 14
    Title.TextXAlignment = Enum.TextXAlignment.Left
    
    local Subtitle = Instance.new("TextLabel")
    Subtitle.Parent = TopBar
    Subtitle.BackgroundTransparency = 1
    Subtitle.Position = UDim2.new(0, 80, 0, 28)
    Subtitle.Size = UDim2.new(0, 300, 0, 15)
    Subtitle.Font = Enum.Font.Gotham
    Subtitle.Text = "Made by ReaperX Hub"
    Subtitle.TextColor3 = Colors.TextDark
    Subtitle.TextSize = 11
    Subtitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Search Bar
    local SearchBar = Instance.new("Frame")
    SearchBar.Parent = TopBar
    SearchBar.BackgroundColor3 = Colors.Element
    SearchBar.BorderSizePixel = 0
    SearchBar.Position = UDim2.new(1, -250, 0, 12)
    SearchBar.Size = UDim2.new(0, 230, 0, 28)
    
    local SearchCorner = Instance.new("UICorner")
    SearchCorner.CornerRadius = UDim.new(0, 6)
    SearchCorner.Parent = SearchBar
    
    local SearchIcon = Instance.new("TextLabel")
    SearchIcon.Parent = SearchBar
    SearchIcon.BackgroundTransparency = 1
    SearchIcon.Position = UDim2.new(0, 8, 0, 0)
    SearchIcon.Size = UDim2.new(0, 28, 1, 0)
    SearchIcon.Font = Enum.Font.GothamBold
    SearchIcon.Text = "üîç"
    SearchIcon.TextColor3 = Colors.TextDark
    SearchIcon.TextSize = 14
    
    local SearchBox = Instance.new("TextBox")
    SearchBox.Parent = SearchBar
    SearchBox.BackgroundTransparency = 1
    SearchBox.Position = UDim2.new(0, 35, 0, 0)
    SearchBox.Size = UDim2.new(1, -40, 1, 0)
    SearchBox.Font = Enum.Font.Gotham
    SearchBox.PlaceholderText = "Search"
    SearchBox.Text = ""
    SearchBox.TextColor3 = Colors.Text
    SearchBox.TextSize = 12
    SearchBox.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Sidebar
    local Sidebar = Instance.new("Frame")
    Sidebar.Name = "Sidebar"
    Sidebar.Parent = Main
    Sidebar.BackgroundColor3 = Colors.Sidebar
    Sidebar.BorderSizePixel = 0
    Sidebar.Position = UDim2.new(0, 0, 0, 50)
    Sidebar.Size = UDim2.new(0, 220, 1, -50)
    
    -- Content
    local Content = Instance.new("Frame")
    Content.Name = "Content"
    Content.Parent = Main
    Content.BackgroundColor3 = Colors.Background
    Content.BorderSizePixel = 0
    Content.Position = UDim2.new(0, 220, 0, 50)
    Content.Size = UDim2.new(1, -220, 1, -50)
    
    -- Dragging
    local dragging = false
    local dragInput, mousePos, framePos
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = Main.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - mousePos
            Main.Position = UDim2.new(
                framePos.X.Scale, framePos.X.Offset + delta.X,
                framePos.Y.Scale, framePos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Close
    CloseBtn.MouseButton1Click:Connect(function()
        Tween(Main, {Size = UDim2.new(0, 0, 0, 0)}, 0.25)
        wait(0.25)
        ScreenGui:Destroy()
    end)
    
    -- Minimize
    local minimized = false
    MinBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        Tween(Main, {Size = minimized and UDim2.new(0, 900, 0, 50) or UDim2.new(0, 900, 0, 550)}, 0.25)
    end)
    
    -- Toggle UI
    local visible = true
    UserInputService.InputBegan:Connect(function(input, gpe)
        if gpe then return end
        if input.KeyCode == Enum.KeyCode.Backslash then
            visible = not visible
            Tween(Main, {Position = visible and UDim2.new(0.5, 0, 0.5, 0) or UDim2.new(0.5, 0, 1.5, 0)}, 0.3)
        end
    end)
    
    local Window = {}
    Window.Tabs = {}
    Window.Categories = {}
    Window.CurrentTab = nil
    
    -- Create Category
    function Window:CreateCategory(name)
        local Category = {}
        Category.Name = name
        Category.Buttons = {}
        
        local CategoryFrame = Instance.new("Frame")
        CategoryFrame.Name = name
        CategoryFrame.Parent = Sidebar
        CategoryFrame.BackgroundTransparency = 1
        CategoryFrame.Size = UDim2.new(1, 0, 0, 0)
        
        local CategoryLabel = Instance.new("TextLabel")
        CategoryLabel.Parent = CategoryFrame
        CategoryLabel.BackgroundTransparency = 1
        CategoryLabel.Position = UDim2.new(0, 20, 0, 8)
        CategoryLabel.Size = UDim2.new(1, -40, 0, 20)
        CategoryLabel.Font = Enum.Font.GothamBold
        CategoryLabel.Text = name
        CategoryLabel.TextColor3 = Colors.TextDark
        CategoryLabel.TextSize = 11
        CategoryLabel.TextXAlignment = Enum.TextXAlignment.Left
        
        local Arrow = Instance.new("TextLabel")
        Arrow.Parent = CategoryLabel
        Arrow.BackgroundTransparency = 1
        Arrow.Position = UDim2.new(1, -15, 0, 0)
        Arrow.Size = UDim2.new(0, 15, 1, 0)
        Arrow.Font = Enum.Font.GothamBold
        Arrow.Text = "‚ñº"
        Arrow.TextColor3 = Colors.TextDark
        Arrow.TextSize = 8
        
        local ButtonContainer = Instance.new("Frame")
        ButtonContainer.Parent = CategoryFrame
        ButtonContainer.BackgroundTransparency = 1
        ButtonContainer.Position = UDim2.new(0, 0, 0, 30)
        ButtonContainer.Size = UDim2.new(1, 0, 0, 0)
        
        local ButtonLayout = Instance.new("UIListLayout")
        ButtonLayout.Parent = ButtonContainer
        ButtonLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ButtonLayout.Padding = UDim.new(0, 2)
        
        local expanded = true
        
        local CategoryBtn = Instance.new("TextButton")
        CategoryBtn.Parent = CategoryLabel
        CategoryBtn.BackgroundTransparency = 1
        CategoryBtn.Size = UDim2.new(1, 0, 1, 0)
        CategoryBtn.Text = ""
        
        CategoryBtn.MouseButton1Click:Connect(function()
            expanded = not expanded
            Tween(Arrow, {Rotation = expanded and 0 or -90}, 0.2)
            
            if expanded then
                ButtonContainer.Visible = true
                local height = 30
                for _, btn in pairs(Category.Buttons) do
                    height = height + 32
                end
                Tween(CategoryFrame, {Size = UDim2.new(1, 0, 0, height)}, 0.2)
            else
                Tween(CategoryFrame, {Size = UDim2.new(1, 0, 0, 30)}, 0.2)
                wait(0.2)
                ButtonContainer.Visible = false
            end
        end)
        
        function Category:CreateButton(name, icon, callback)
            local Button = Instance.new("TextButton")
            Button.Name = name
            Button.Parent = ButtonContainer
            Button.BackgroundColor3 = Colors.Sidebar
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, -20, 0, 30)
            Button.Position = UDim2.new(0, 10, 0, 0)
            Button.AutoButtonColor = false
            Button.Text = ""
            
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(0, 6)
            BtnCorner.Parent = Button
            
            local Icon = Instance.new("TextLabel")
            Icon.Parent = Button
            Icon.BackgroundTransparency = 1
            Icon.Position = UDim2.new(0, 10, 0, 0)
            Icon.Size = UDim2.new(0, 30, 1, 0)
            Icon.Font = Enum.Font.GothamBold
            Icon.Text = icon or "‚óè"
            Icon.TextColor3 = Colors.Selected
            Icon.TextSize = 14
            Icon.TextXAlignment = Enum.TextXAlignment.Left
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Button
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 35, 0, 0)
            Label.Size = UDim2.new(1, -40, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = name
            Label.TextColor3 = Colors.Text
            Label.TextSize = 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            Button.MouseEnter:Connect(function()
                if Button.BackgroundColor3 ~= Colors.Selected then
                    Tween(Button, {BackgroundColor3 = Colors.SidebarHover}, 0.15)
                end
            end)
            
            Button.MouseLeave:Connect(function()
                if Button.BackgroundColor3 ~= Colors.Selected then
                    Tween(Button, {BackgroundColor3 = Colors.Sidebar}, 0.15)
                end
            end)
            
            Button.MouseButton1Click:Connect(function()
                for _, cat in pairs(Window.Categories) do
                    for _, btn in pairs(cat.Buttons) do
                        btn.BackgroundColor3 = Colors.Sidebar
                        btn.Icon.TextColor3 = Colors.TextDark
                    end
                end
                
                Button.BackgroundColor3 = Colors.Selected
                Icon.TextColor3 = Colors.Text
                
                if callback then
                    callback()
                end
            end)
            
            table.insert(Category.Buttons, {Button = Button, Icon = Icon, Label = Label})
            
            local height = 30
            for _ in pairs(Category.Buttons) do
                height = height + 32
            end
            CategoryFrame.Size = UDim2.new(1, 0, 0, height)
            
            local Tab = Window:CreateTab(name)
            return Tab
        end
        
        table.insert(Window.Categories, Category)
        
        -- Position categories
        local yPos = 10
        for _, cat in pairs(Window.Categories) do
            cat.CategoryFrame = CategoryFrame
            CategoryFrame.Position = UDim2.new(0, 0, 0, yPos)
            
            local height = 30
            for _ in pairs(cat.Buttons) do
                height = height + 32
            end
            yPos = yPos + height + 5
        end
        
        return Category
    end
    
    function Window:CreateTab(name)
        local Tab = Instance.new("ScrollingFrame")
        Tab.Name = name
        Tab.Parent = Content
        Tab.BackgroundTransparency = 1
        Tab.BorderSizePixel = 0
        Tab.Size = UDim2.new(1, 0, 1, 0)
        Tab.ScrollBarThickness = 4
        Tab.ScrollBarImageColor3 = Colors.Accent
        Tab.Visible = false
        Tab.CanvasSize = UDim2.new(0, 0, 0, 0)
        
        local TabPadding = Instance.new("UIPadding")
        TabPadding.Parent = Tab
        TabPadding.PaddingTop = UDim.new(0, 15)
        TabPadding.PaddingLeft = UDim.new(0, 15)
        TabPadding.PaddingRight = UDim.new(0, 15)
        TabPadding.PaddingBottom = UDim.new(0, 15)
        
        local TabLayout = Instance.new("UIListLayout")
        TabLayout.Parent = Tab
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 15)
        
        TabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            Tab.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y + 30)
        end)
        
        table.insert(Window.Tabs, Tab)
        
        local Elements = {}
        
        -- Section
        function Elements:CreateSection(name)
            local Section = Instance.new("Frame")
            Section.Parent = Tab
            Section.BackgroundTransparency = 1
            Section.Size = UDim2.new(1, 0, 0, 0)
            
            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Parent = Section
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Size = UDim2.new(1, 0, 0, 25)
            SectionLabel.Font = Enum.Font.GothamBold
            SectionLabel.Text = name
            SectionLabel.TextColor3 = Colors.Text
            SectionLabel.TextSize = 14
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            
            local SectionContainer = Instance.new("Frame")
            SectionContainer.Parent = Section
            SectionContainer.BackgroundTransparency = 1
            SectionContainer.Position = UDim2.new(0, 0, 0, 30)
            SectionContainer.Size = UDim2.new(1, 0, 0, 0)
            
            local SectionLayout = Instance.new("UIListLayout")
            SectionLayout.Parent = SectionContainer
            SectionLayout.SortOrder = Enum.SortOrder.LayoutOrder
            SectionLayout.Padding = UDim.new(0, 8)
            
            SectionLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
                SectionContainer.Size = UDim2.new(1, 0, 0, SectionLayout.AbsoluteContentSize.Y)
                Section.Size = UDim2.new(1, 0, 0, SectionLayout.AbsoluteContentSize.Y + 35)
            end)
            
            local SectionElements = {}
            
            function SectionElements:CreateToggle(config)
                config = config or {}
                local text = config.Name or "Toggle"
                local desc = config.Description
                local default = config.Default or false
                local callback = config.Callback or function() end
                
                local Toggle = Instance.new("Frame")
                Toggle.Parent = SectionContainer
                Toggle.BackgroundColor3 = Colors.Element
                Toggle.BorderSizePixel = 0
                Toggle.Size = UDim2.new(1, 0, 0, desc and 55 or 45)
                
                local ToggleCorner = Instance.new("UICorner")
                ToggleCorner.CornerRadius = UDim.new(0, 8)
                ToggleCorner.Parent = Toggle
                
                local Icon = Instance.new("TextLabel")
                Icon.Parent = Toggle
                Icon.BackgroundTransparency = 1
                Icon.Position = UDim2.new(0, 12, 0, desc and 8 or 12)
                Icon.Size = UDim2.new(0, 20, 0, 20)
                Icon.Font = Enum.Font.GothamBold
                Icon.Text = config.Icon or "‚úï"
                Icon.TextColor3 = Colors.TextDark
                Icon.TextSize = 14
                
                local Label = Instance.new("TextLabel")
                Label.Parent = Toggle
                Label.BackgroundTransparency = 1
                Label.Position = UDim2.new(0, 40, 0, desc and 8 or 12)
                Label.Size = UDim2.new(1, -120, 0, 20)
                Label.Font = Enum.Font.GothamMedium
                Label.Text = text
                Label.TextColor3 = Colors.Text
                Label.TextSize = 13
                Label.TextXAlignment = Enum.TextXAlignment.Left
                
                if desc then
                    local Desc = Instance.new("TextLabel")
                    Desc.Parent = Toggle
                    Desc.BackgroundTransparency = 1
                    Desc.Position = UDim2.new(0, 40, 0, 28)
                    Desc.Size = UDim2.new(1, -120, 0, 18)
                    Desc.Font = Enum.Font.Gotham
                    Desc.Text = desc
                    Desc.TextColor3 = Colors.TextDark
                    Desc.TextSize = 11
                    Desc.TextXAlignment = Enum.TextXAlignment.Left
                end
                
                local ToggleBtn = Instance.new("TextButton")
                ToggleBtn.Parent = Toggle
                ToggleBtn.BackgroundColor3 = default and Colors.Accent or Color3.fromRGB(50, 50, 53)
                ToggleBtn.BorderSizePixel = 0
                ToggleBtn.Position = UDim2.new(1, -55, 0.5, -11)
                ToggleBtn.Size = UDim2.new(0, 45, 0, 22)
                ToggleBtn.Text = ""
                ToggleBtn.AutoButtonColor = false
                
                local ToggleBtnCorner = Instance.new("UICorner")
                ToggleBtnCorner.CornerRadius = UDim.new(1, 0)
                ToggleBtnCorner.Parent = ToggleBtn
                
                local Circle = Instance.new("Frame")
                Circle.Parent = ToggleBtn
                Circle.BackgroundColor3 = Colors.Text
                Circle.BorderSizePixel = 0
                Circle.Position = default and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9)
                Circle.Size = UDim2.new(0, 18, 0, 18)
                
                local CircleCorner = Instance.new("UICorner")
                CircleCorner.CornerRadius = UDim.new(1, 0)
                CircleCorner.Parent = Circle
                
                local toggled = default
                Library.Flags[text] = toggled
                
                ToggleBtn.MouseButton1Click:Connect(function()
                    toggled = not toggled
                    Library.Flags[text] = toggled
                    
                    if toggled then
                        Tween(ToggleBtn, {BackgroundColor3 = Colors.Accent}, 0.2)
                        Tween(Circle, {Position = UDim2.new(1, -20, 0.5, -9)}, 0.2)
                    else
                        Tween(ToggleBtn, {BackgroundColor3 = Color3.fromRGB(50, 50, 53)}, 0.2)
                        Tween(Circle, {Position = UDim2.new(0, 2, 0.5, -9)}, 0.2)
                    end
                    
                    pcall(callback, toggled)
                end)
                
                return Toggle
            end
            
            function SectionElements:CreateDropdown(config)
                config = config or {}
                local text = config.Name or "Dropdown"
                local desc = config.Description
                local options = config.Options or {"Option 1"}
                local default = config.Default or options[1]
                local callback = config.Callback or function() end
                
                local Dropdown = Instance.new("Frame")
                Dropdown.Parent = SectionContainer
                Dropdown.BackgroundColor3 = Colors.Element
                Dropdown.BorderSizePixel = 0
                Dropdown.Size = UDim2.new(1, 0, 0, desc and 55 or 45)
                Dropdown.ClipsDescendants = true
                
                local DropCorner = Instance.new("UICorner")
                DropCorner.CornerRadius = UDim.new(0, 8)
                DropCorner.Parent = Dropdown
                
                local Icon = Instance.new("TextLabel")
                Icon.Parent = Dropdown
                Icon.BackgroundTransparency = 1
                Icon.Position = UDim2.new(0, 12, 0, desc and 8 or 12)
                Icon.Size = UDim2.new(0, 20, 0, 20)
                Icon.Font = Enum.Font.GothamBold
                Icon.Text = config.Icon or "?"
                Icon.TextColor3 = Colors.TextDark
                Icon.TextSize = 14
                
                local Label = Instance.new("TextLabel")
                Label.Parent = Dropdown
                Label.BackgroundTransparency = 1
                Label.Position = UDim2.new(0, 40, 0, desc and 8 or 12)
                Label.Size = UDim2.new(1, -340, 0, 20)
                Label.Font = Enum.Font.GothamMedium
                Label.Text = text
                Label.TextColor3 = Colors.Text
                Label.TextSize = 13
                Label.TextXAlignment = Enum.TextXAlignment.Left
                
                if desc then
                    local Desc = Instance.new("TextLabel")
                    Desc.Parent = Dropdown
                    Desc.BackgroundTransparency = 1
                    Desc.Position = UDim2.new(0, 40, 0, 28)
                    Desc.Size = UDim2.new(1, -340, 0, 18)
                    Desc.Font = Enum.Font.Gotham
                    Desc.Text = desc
                    Desc.TextColor3 = Colors.TextDark
                    Desc.TextSize = 11
                    Desc.TextXAlignment = Enum.TextXAlignment.Left
                end
                
                local DropBtn = Instance.new("TextButton")
                DropBtn.Parent = Dropdown
                DropBtn.BackgroundColor3 = Color3.fromRGB(45, 45, 48)
                DropBtn.BorderSizePixel = 0
                DropBtn.Position = UDim2.new(1, -285, 0, desc and 12 or 10)
                DropBtn.Size = UDim2.new(0, 270, 0, 25)
                DropBtn.Font = Enum.Font.Gotham
                DropBtn.Text = " " .. default
                DropBtn.TextColor3 = Colors.Text
                DropBtn.TextSize = 11
                DropBtn.TextXAlignment = Enum.TextXAlignment.Left
                DropBtn.AutoButtonColor = false
                
                local DropBtnCorner = Instance.new("UICorner")
                DropBtnCorner.CornerRadius = UDim.new(0, 5)
                DropBtnCorner.Parent = DropBtn
                
                local Arrow = Instance.new("TextLabel")
                Arrow.Parent = DropBtn
                Arrow.BackgroundTransparency = 1
                Arrow.Position = UDim2.new(1, -20, 0, 0)
                Arrow.Size = UDim2.new(0, 20, 1, 0)
                Arrow.Font = Enum.Font.GothamBold
                Arrow.Text = "‚ñº"
                Arrow.TextColor3 = Colors.TextDark
                Arrow.TextSize = 8
                
                local DropList = Instance.new("Frame")
                DropList.Parent = Dropdown
                DropList.BackgroundColor3 = Color3.fromRGB(40, 40, 43)
                DropList.BorderSizePixel = 0
                DropList.Position = UDim2.new(1, -285, 0, desc and 42 or 40)
                DropList.Size = UDim2.new(0, 270, 0, 0)
                DropList.Visible = false
                DropList.ClipsDescendants = true
                
                local ListCorner = Instance.new("UICorner")
                ListCorner.CornerRadius = UDim.new(0, 5)
                ListCorner.Parent = DropList
                
                local ListLayout = Instance.new("UIListLayout")
                ListLayout.Parent = DropList
                ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
                
                local opened = false
                local selected = default
                Library.Flags[text] = selected
                
                for _, option in ipairs(options) do
                    local OptBtn = Instance.new("TextButton")
                    OptBtn.Parent = DropList
                    OptBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 43)
                    OptBtn.BorderSizePixel = 0
                    OptBtn.Size = UDim2.new(1, 0, 0, 25)
                    OptBtn.Font = Enum.Font.Gotham
                    OptBtn.Text = " " .. option
                    OptBtn.TextColor3 = Colors.Text
                    OptBtn.TextSize = 11
                    OptBtn.TextXAlignment = Enum.TextXAlignment.Left
                    OptBtn.AutoButtonColor = false
                    
                    OptBtn.MouseEnter:Connect(function()
                        OptBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 53)
                    end)
                    
                    OptBtn.MouseLeave:Connect(function()
                        OptBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 43)
                    end)
                    
                    OptBtn.MouseButton1Click:Connect(function()
                        selected = option
                        Library.Flags[text] = selected
                        DropBtn.Text = " " .. option
                        
                        opened = false
                        DropList.Visible = false
                        Tween(Dropdown, {Size = UDim2.new(1, 0, 0, desc and 55 or 45)}, 0.2)
                        Tween(Arrow, {Rotation = 0}, 0.2)
                        
                        pcall(callback, option)
                    end)
                end
                
                DropBtn.MouseButton1Click:Connect(function()
                    opened = not opened
                    
                    if opened then
                        local listSize = #options * 25
                        DropList.Size = UDim2.new(0, 270, 0, listSize)
                        DropList.Visible = true
                        Tween(Dropdown, {Size = UDim2.new(1, 0, 0, (desc and 60 or 50) + listSize)}, 0.2)
                        Tween(Arrow, {Rotation = 180}, 0.2)
                    else
                        DropList.Visible = false
                        Tween(Dropdown, {Size = UDim2.new(1, 0, 0, desc and 55 or 45)}, 0.2)
                        Tween(Arrow, {Rotation = 0}, 0.2)
                    end
                end)
                
                return Dropdown
            end
            
            return SectionElements
        end
        
        return Elements
    end
    
    -- Notify
    function Window:Notify(config)
        config = config or {}
        local title = config.Title or "Notification"
        local message = config.Message or ""
        local duration = config.Duration or 3
        local type = config.Type or "info"
        
        local colors = {
            info = Colors.Accent,
            success = Color3.fromRGB(52, 199, 89),
            warning = Color3.fromRGB(255, 204, 0),
            error = Color3.fromRGB(255, 59, 48)
        }
        
        local color = colors[type] or Colors.Accent
        
        -- Toast implementation here (similar to before)
    end
    
    return Window
end

return Library
