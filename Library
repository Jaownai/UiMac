-- macOS Style UI Library for Roblox (Fixed Version)
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Library = {}
Library.Flags = {}

-- Check for mobile
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Safe ScreenGui Parent
local function getParent()
    if gethui then
        return gethui()
    elseif syn and syn.protect_gui then
        local gui = Instance.new("ScreenGui")
        syn.protect_gui(gui)
        gui.Parent = game.CoreGui
        return gui.Parent
    else
        return game.CoreGui
    end
end

-- Colors
local Colors = {
    Background = Color3.fromRGB(30, 30, 35),
    Sidebar = Color3.fromRGB(40, 40, 45),
    Element = Color3.fromRGB(50, 50, 55),
    Accent = Color3.fromRGB(0, 122, 255),
    Text = Color3.fromRGB(255, 255, 255),
    TextDark = Color3.fromRGB(160, 160, 160),
    Success = Color3.fromRGB(52, 199, 89),
    Warning = Color3.fromRGB(255, 204, 0),
    Error = Color3.fromRGB(255, 59, 48),
    Hover = Color3.fromRGB(60, 60, 65)
}

-- Tween
local function Tween(obj, props, duration)
    local tween = TweenService:Create(obj, TweenInfo.new(duration or 0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), props)
    tween:Play()
    return tween
end

-- Create Window
function Library:CreateWindow(config)
    config = config or {}
    local title = config.Title or config.Name or "macOS UI"
    local toggleKey = config.ToggleKey or Enum.KeyCode.Backslash
    
    -- ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "MacOSUI_" .. math.random(1000, 9999)
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    ScreenGui.DisplayOrder = 999
    
    pcall(function()
        ScreenGui.Parent = getParent()
    end)
    
    if not ScreenGui.Parent then
        ScreenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    end
    
    -- Main Container
    local Main = Instance.new("Frame")
    Main.Name = "Main"
    Main.Parent = ScreenGui
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Colors.Background
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 700, 0, 450)
    Main.Active = true
    Main.ClipsDescendants = true
    
    local MainCorner = Instance.new("UICorner")
    MainCorner.CornerRadius = UDim.new(0, 12)
    MainCorner.Parent = Main
    
    -- TopBar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Parent = Main
    TopBar.BackgroundColor3 = Colors.Sidebar
    TopBar.BorderSizePixel = 0
    TopBar.Size = UDim2.new(1, 0, 0, 35)
    
    local TopCorner = Instance.new("UICorner")
    TopCorner.CornerRadius = UDim.new(0, 12)
    TopCorner.Parent = TopBar
    
    local TopFix = Instance.new("Frame")
    TopFix.Parent = TopBar
    TopFix.BackgroundColor3 = Colors.Sidebar
    TopFix.BorderSizePixel = 0
    TopFix.Position = UDim2.new(0, 0, 1, -12)
    TopFix.Size = UDim2.new(1, 0, 0, 12)
    
    -- Window Buttons
    local function createCircleButton(color, pos)
        local btn = Instance.new("TextButton")
        btn.Parent = TopBar
        btn.BackgroundColor3 = color
        btn.BorderSizePixel = 0
        btn.Position = UDim2.new(0, pos, 0, 11.5)
        btn.Size = UDim2.new(0, 12, 0, 12)
        btn.Text = ""
        btn.AutoButtonColor = false
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(1, 0)
        corner.Parent = btn
        
        return btn
    end
    
    local CloseBtn = createCircleButton(Color3.fromRGB(255, 95, 87), 10)
    local MinBtn = createCircleButton(Color3.fromRGB(255, 189, 68), 30)
    local MaxBtn = createCircleButton(Color3.fromRGB(40, 201, 64), 50)
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Parent = TopBar
    Title.BackgroundTransparency = 1
    Title.Position = UDim2.new(0, 70, 0, 0)
    Title.Size = UDim2.new(1, -140, 1, 0)
    Title.Font = Enum.Font.GothamMedium
    Title.Text = title
    Title.TextColor3 = Colors.Text
    Title.TextSize = 13
    Title.TextXAlignment = Enum.TextXAlignment.Center
    
    -- Sidebar
    local Sidebar = Instance.new("Frame")
    Sidebar.Name = "Sidebar"
    Sidebar.Parent = Main
    Sidebar.BackgroundColor3 = Colors.Sidebar
    Sidebar.BorderSizePixel = 0
    Sidebar.Position = UDim2.new(0, 0, 0, 35)
    Sidebar.Size = UDim2.new(0, 150, 1, -35)
    
    local TabContainer = Instance.new("ScrollingFrame")
    TabContainer.Name = "TabContainer"
    TabContainer.Parent = Sidebar
    TabContainer.BackgroundTransparency = 1
    TabContainer.BorderSizePixel = 0
    TabContainer.Size = UDim2.new(1, 0, 1, 0)
    TabContainer.ScrollBarThickness = 0
    TabContainer.CanvasSize = UDim2.new(0, 0, 0, 0)
    
    local TabLayout = Instance.new("UIListLayout")
    TabLayout.Parent = TabContainer
    TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
    TabLayout.Padding = UDim.new(0, 5)
    
    TabLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        TabContainer.CanvasSize = UDim2.new(0, 0, 0, TabLayout.AbsoluteContentSize.Y + 20)
    end)
    
    local TabPadding = Instance.new("UIPadding")
    TabPadding.Parent = TabContainer
    TabPadding.PaddingTop = UDim.new(0, 10)
    TabPadding.PaddingLeft = UDim.new(0, 10)
    TabPadding.PaddingRight = UDim.new(0, 10)
    
    -- Content
    local Content = Instance.new("Frame")
    Content.Name = "Content"
    Content.Parent = Main
    Content.BackgroundColor3 = Colors.Background
    Content.BorderSizePixel = 0
    Content.Position = UDim2.new(0, 150, 0, 35)
    Content.Size = UDim2.new(1, -150, 1, -35)
    Content.ClipsDescendants = true
    
    -- Dragging
    local dragging = false
    local dragInput, mousePos, framePos
    
    TopBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            mousePos = input.Position
            framePos = Main.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - mousePos
            Main.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end
    end)
    
    -- Close
    CloseBtn.MouseButton1Click:Connect(function()
        Tween(Main, {Size = UDim2.new(0, 0, 0, 0)}, 0.25)
        wait(0.25)
        ScreenGui:Destroy()
    end)
    
    -- Minimize
    local minimized = false
    MinBtn.MouseButton1Click:Connect(function()
        minimized = not minimized
        if minimized then
            Tween(Main, {Size = UDim2.new(0, 700, 0, 35)}, 0.25)
        else
            Tween(Main, {Size = UDim2.new(0, 700, 0, 450)}, 0.25)
        end
    end)
    
    -- Toggle UI
    local visible = true
    UserInputService.InputBegan:Connect(function(input, gpe)
        if gpe then return end
        if input.KeyCode == toggleKey then
            visible = not visible
            if visible then
                Tween(Main, {Position = UDim2.new(0.5, 0, 0.5, 0)}, 0.3)
            else
                Tween(Main, {Position = UDim2.new(0.5, 0, 1.5, 0)}, 0.3)
            end
        end
    end)
    
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    Window.ScreenGui = ScreenGui
    Window.Main = Main
    
    -- Create Tab
    function Window:CreateTab(name, icon)
        local TabButton = Instance.new("TextButton")
        local TabIcon = Instance.new("TextLabel")
        local TabPage = Instance.new("ScrollingFrame")
        
        TabButton.Name = name
        TabButton.Parent = TabContainer
        TabButton.BackgroundColor3 = Colors.Element
        TabButton.BorderSizePixel = 0
        TabButton.Size = UDim2.new(1, 0, 0, 32)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = ""
        TabButton.AutoButtonColor = false
        
        local BtnCorner = Instance.new("UICorner")
        BtnCorner.CornerRadius = UDim.new(0, 8)
        BtnCorner.Parent = TabButton
        
        TabIcon.Parent = TabButton
        TabIcon.BackgroundTransparency = 1
        TabIcon.Position = UDim2.new(0, 10, 0, 0)
        TabIcon.Size = UDim2.new(0, 32, 1, 0)
        TabIcon.Font = Enum.Font.GothamBold
        TabIcon.Text = icon or "üìÅ"
        TabIcon.TextColor3 = Colors.TextDark
        TabIcon.TextSize = 16
        TabIcon.TextXAlignment = Enum.TextXAlignment.Left
        
        local TabLabel = Instance.new("TextLabel")
        TabLabel.Parent = TabButton
        TabLabel.BackgroundTransparency = 1
        TabLabel.Position = UDim2.new(0, 35, 0, 0)
        TabLabel.Size = UDim2.new(1, -40, 1, 0)
        TabLabel.Font = Enum.Font.Gotham
        TabLabel.Text = name
        TabLabel.TextColor3 = Colors.TextDark
        TabLabel.TextSize = 12
        TabLabel.TextXAlignment = Enum.TextXAlignment.Left
        
        -- Page
        TabPage.Name = name .. "Page"
        TabPage.Parent = Content
        TabPage.BackgroundTransparency = 1
        TabPage.BorderSizePixel = 0
        TabPage.Size = UDim2.new(1, 0, 1, 0)
        TabPage.ScrollBarThickness = 4
        TabPage.ScrollBarImageColor3 = Colors.Accent
        TabPage.Visible = false
        TabPage.CanvasSize = UDim2.new(0, 0, 0, 0)
        
        local PageLayout = Instance.new("UIListLayout")
        PageLayout.Parent = TabPage
        PageLayout.SortOrder = Enum.SortOrder.LayoutOrder
        PageLayout.Padding = UDim.new(0, 8)
        
        PageLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabPage.CanvasSize = UDim2.new(0, 0, 0, PageLayout.AbsoluteContentSize.Y + 20)
        end)
        
        local PagePadding = Instance.new("UIPadding")
        PagePadding.Parent = TabPage
        PagePadding.PaddingTop = UDim.new(0, 10)
        PagePadding.PaddingLeft = UDim.new(0, 10)
        PagePadding.PaddingRight = UDim.new(0, 10)
        PagePadding.PaddingBottom = UDim.new(0, 10)
        
        -- Tab Click
        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Button.BackgroundColor3 = Colors.Element
                tab.Icon.TextColor3 = Colors.TextDark
                tab.Label.TextColor3 = Colors.TextDark
                tab.Page.Visible = false
            end
            
            TabButton.BackgroundColor3 = Colors.Accent
            TabIcon.TextColor3 = Colors.Text
            TabLabel.TextColor3 = Colors.Text
            TabPage.Visible = true
            Window.CurrentTab = TabPage
        end)
        
        -- Hover
        TabButton.MouseEnter:Connect(function()
            if TabButton.BackgroundColor3 ~= Colors.Accent then
                Tween(TabButton, {BackgroundColor3 = Colors.Hover}, 0.15)
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if TabButton.BackgroundColor3 ~= Colors.Accent then
                Tween(TabButton, {BackgroundColor3 = Colors.Element}, 0.15)
            end
        end)
        
        local TabObj = {
            Button = TabButton,
            Icon = TabIcon,
            Label = TabLabel,
            Page = TabPage
        }
        table.insert(Window.Tabs, TabObj)
        
        if #Window.Tabs == 1 then
            TabButton.BackgroundColor3 = Colors.Accent
            TabIcon.TextColor3 = Colors.Text
            TabLabel.TextColor3 = Colors.Text
            TabPage.Visible = true
            Window.CurrentTab = TabPage
        end
        
        local Elements = {}
        
        -- Button
        function Elements:CreateButton(config)
            config = config or {}
            local text = config.Name or config.Text or "Button"
            local callback = config.Callback or function() end
            
            local Button = Instance.new("TextButton")
            Button.Parent = TabPage
            Button.BackgroundColor3 = Colors.Accent
            Button.BorderSizePixel = 0
            Button.Size = UDim2.new(1, 0, 0, 35)
            Button.Font = Enum.Font.GothamMedium
            Button.Text = text
            Button.TextColor3 = Colors.Text
            Button.TextSize = 12
            Button.AutoButtonColor = false
            
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(0, 8)
            BtnCorner.Parent = Button
            
            Button.MouseEnter:Connect(function()
                Tween(Button, {BackgroundColor3 = Color3.fromRGB(10, 132, 255)}, 0.15)
            end)
            
            Button.MouseLeave:Connect(function()
                Tween(Button, {BackgroundColor3 = Colors.Accent}, 0.15)
            end)
            
            Button.MouseButton1Click:Connect(function()
                Tween(Button, {BackgroundColor3 = Color3.fromRGB(0, 100, 220)}, 0.1)
                task.wait(0.1)
                Tween(Button, {BackgroundColor3 = Colors.Accent}, 0.1)
                pcall(callback)
            end)
            
            return Button
        end
        
        -- Toggle
        function Elements:CreateToggle(config)
            config = config or {}
            local text = config.Name or config.Text or "Toggle"
            local default = config.Default or false
            local callback = config.Callback or function() end
            
            local Toggle = Instance.new("Frame")
            Toggle.Parent = TabPage
            Toggle.BackgroundColor3 = Colors.Element
            Toggle.BorderSizePixel = 0
            Toggle.Size = UDim2.new(1, 0, 0, 35)
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 8)
            ToggleCorner.Parent = Toggle
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Toggle
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 12, 0, 0)
            Label.Size = UDim2.new(1, -60, 1, 0)
            Label.Font = Enum.Font.Gotham
            Label.Text = text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local ToggleBtn = Instance.new("TextButton")
            ToggleBtn.Parent = Toggle
            ToggleBtn.BackgroundColor3 = default and Colors.Accent or Colors.Background
            ToggleBtn.BorderSizePixel = 0
            ToggleBtn.Position = UDim2.new(1, -45, 0.5, -10)
            ToggleBtn.Size = UDim2.new(0, 40, 0, 20)
            ToggleBtn.Text = ""
            ToggleBtn.AutoButtonColor = false
            
            local ToggleBtnCorner = Instance.new("UICorner")
            ToggleBtnCorner.CornerRadius = UDim.new(1, 0)
            ToggleBtnCorner.Parent = ToggleBtn
            
            local Circle = Instance.new("Frame")
            Circle.Parent = ToggleBtn
            Circle.BackgroundColor3 = Colors.Text
            Circle.BorderSizePixel = 0
            Circle.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            Circle.Size = UDim2.new(0, 16, 0, 16)
            
            local CircleCorner = Instance.new("UICorner")
            CircleCorner.CornerRadius = UDim.new(1, 0)
            CircleCorner.Parent = Circle
            
            local toggled = default
            Library.Flags[text] = toggled
            
            ToggleBtn.MouseButton1Click:Connect(function()
                toggled = not toggled
                Library.Flags[text] = toggled
                
                if toggled then
                    Tween(ToggleBtn, {BackgroundColor3 = Colors.Accent}, 0.2)
                    Tween(Circle, {Position = UDim2.new(1, -18, 0.5, -8)}, 0.2)
                else
                    Tween(ToggleBtn, {BackgroundColor3 = Colors.Background}, 0.2)
                    Tween(Circle, {Position = UDim2.new(0, 2, 0.5, -8)}, 0.2)
                end
                
                pcall(callback, toggled)
            end)
            
            return Toggle
        end
        
        -- Slider
        function Elements:CreateSlider(config)
            config = config or {}
            local text = config.Name or config.Text or "Slider"
            local min = config.Min or 0
            local max = config.Max or 100
            local default = config.Default or min
            local callback = config.Callback or function() end
            
            local Slider = Instance.new("Frame")
            Slider.Parent = TabPage
            Slider.BackgroundColor3 = Colors.Element
            Slider.BorderSizePixel = 0
            Slider.Size = UDim2.new(1, 0, 0, 45)
            
            local SliderCorner = Instance.new("UICorner")
            SliderCorner.CornerRadius = UDim.new(0, 8)
            SliderCorner.Parent = Slider
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Slider
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 12, 0, 8)
            Label.Size = UDim2.new(1, -70, 0, 14)
            Label.Font = Enum.Font.Gotham
            Label.Text = text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local Value = Instance.new("TextLabel")
            Value.Parent = Slider
            Value.BackgroundTransparency = 1
            Value.Position = UDim2.new(1, -55, 0, 8)
            Value.Size = UDim2.new(0, 45, 0, 14)
            Value.Font = Enum.Font.GothamBold
            Value.Text = tostring(default)
            Value.TextColor3 = Colors.Accent
            Value.TextSize = 12
            Value.TextXAlignment = Enum.TextXAlignment.Right
            
            local SliderBack = Instance.new("Frame")
            SliderBack.Parent = Slider
            SliderBack.BackgroundColor3 = Colors.Background
            SliderBack.BorderSizePixel = 0
            SliderBack.Position = UDim2.new(0, 12, 1, -14)
            SliderBack.Size = UDim2.new(1, -24, 0, 5)
            
            local BackCorner = Instance.new("UICorner")
            BackCorner.CornerRadius = UDim.new(1, 0)
            BackCorner.Parent = SliderBack
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Parent = SliderBack
            SliderFill.BackgroundColor3 = Colors.Accent
            SliderFill.BorderSizePixel = 0
            SliderFill.Size = UDim2.new((default - min) / (max - min), 0, 1, 0)
            
            local FillCorner = Instance.new("UICorner")
            FillCorner.CornerRadius = UDim.new(1, 0)
            FillCorner.Parent = SliderFill
            
            local SliderBtn = Instance.new("TextButton")
            SliderBtn.Parent = SliderBack
            SliderBtn.BackgroundColor3 = Colors.Text
            SliderBtn.BorderSizePixel = 0
            SliderBtn.Position = UDim2.new((default - min) / (max - min), -5, 0.5, -5)
            SliderBtn.Size = UDim2.new(0, 10, 0, 10)
            SliderBtn.Text = ""
            SliderBtn.AutoButtonColor = false
            
            local BtnCorner = Instance.new("UICorner")
            BtnCorner.CornerRadius = UDim.new(1, 0)
            BtnCorner.Parent = SliderBtn
            
            local dragging = false
            local currentValue = default
            Library.Flags[text] = currentValue
            
            local function update(input)
                local pos = math.clamp((input.Position.X - SliderBack.AbsolutePosition.X) / SliderBack.AbsoluteSize.X, 0, 1)
                currentValue = math.floor(min + (max - min) * pos)
                
                Library.Flags[text] = currentValue
                Value.Text = tostring(currentValue)
                
                SliderFill.Size = UDim2.new(pos, 0, 1, 0)
                SliderBtn.Position = UDim2.new(pos, -5, 0.5, -5)
                
                pcall(callback, currentValue)
            end
            
            SliderBtn.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
                    update(input)
                end
            end)
            
            SliderBack.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    update(input)
                end
            end)
            
            return Slider
        end
        
        -- Dropdown
        function Elements:CreateDropdown(config)
            config = config or {}
            local text = config.Name or config.Text or "Dropdown"
            local options = config.Options or {"Option 1", "Option 2"}
            local default = config.Default or options[1]
            local callback = config.Callback or function() end
            
            local Dropdown = Instance.new("Frame")
            Dropdown.Parent = TabPage
            Dropdown.BackgroundColor3 = Colors.Element
            Dropdown.BorderSizePixel = 0
            Dropdown.Size = UDim2.new(1, 0, 0, 35)
            Dropdown.ClipsDescendants = true
            
            local DropCorner = Instance.new("UICorner")
            DropCorner.CornerRadius = UDim.new(0, 8)
            DropCorner.Parent = Dropdown
            
            local Label = Instance.new("TextLabel")
            Label.Parent = Dropdown
            Label.BackgroundTransparency = 1
            Label.Position = UDim2.new(0, 12, 0, 0)
            Label.Size = UDim2.new(1, -130, 0, 35)
            Label.Font = Enum.Font.Gotham
            Label.Text = text
            Label.TextColor3 = Colors.Text
            Label.TextSize = 12
            Label.TextXAlignment = Enum.TextXAlignment.Left
            
            local DropBtn = Instance.new("TextButton")
            DropBtn.Parent = Dropdown
            DropBtn.BackgroundColor3 = Colors.Background
            DropBtn.BorderSizePixel = 0
            DropBtn.Position = UDim2.new(1, -110, 0, 5)
            DropBtn.Size = UDim2.new(0, 100, 0, 25)
            DropBtn.Font = Enum.Font.Gotham
            DropBtn.Text = " " .. default
            DropBtn.TextColor3 = Colors.Text
            DropBtn.TextSize = 11
            DropBtn.TextXAlignment = Enum.TextXAlignment.Left
            DropBtn.AutoButtonColor = false
            
            local DropBtnCorner = Instance.new("UICorner")
            DropBtnCorner.CornerRadius = UDim.new(0, 6)
            DropBtnCorner.Parent = DropBtn
            
            local Arrow = Instance.new("TextLabel")
            Arrow.Parent = DropBtn
            Arrow.BackgroundTransparency = 1
            Arrow.Position = UDim2.new(1, -18, 0, 0)
            Arrow.Size = UDim2.new(0, 18, 1, 0)
            Arrow.Font = Enum.Font.GothamBold
            Arrow.Text = "‚ñº"
            Arrow.TextColor3 = Colors.TextDark
            Arrow.TextSize = 9
            
            local DropList = Instance.new("Frame")
            DropList.Parent = Dropdown
            DropList.BackgroundColor3 = Colors.Background
            DropList.BorderSizePixel = 0
            DropList.Position = UDim2.new(0, 12, 0, 40)
            DropList.Size = UDim2.new(1, -24, 0, 0)
            DropList.Visible = false
            DropList.ClipsDescendants = true
            
            local ListCorner = Instance.new("UICorner")
            ListCorner.CornerRadius = UDim.new(0, 6)
            ListCorner.Parent = DropList
            
            local ListLayout = Instance.new("UIListLayout")
            ListLayout.Parent = DropList
            ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            
            local opened = false
            local selected = default
            Library.Flags[text] = selected
            
            for i, option in ipairs(options) do
                local OptBtn = Instance.new("TextButton")
                OptBtn.Parent = DropList
                OptBtn.BackgroundColor3 = Colors.Background
                OptBtn.BorderSizePixel = 0
                OptBtn.Size = UDim2.new(1, 0, 0, 25)
                OptBtn.Font = Enum.Font.Gotham
                OptBtn.Text = " " .. option
                OptBtn.TextColor3 = Colors.Text
                OptBtn.TextSize = 11
                OptBtn.TextXAlignment = Enum.TextXAlignment.Left
                OptBtn.AutoButtonColor = false
                
                OptBtn.MouseEnter:Connect(function()
                    OptBtn.BackgroundColor3 = Colors.Hover
                end)
                
                OptBtn.MouseLeave:Connect(function()
                    OptBtn.BackgroundColor3 = Colors.Background
                end)
                
                OptBtn.MouseButton1Click:Connect(function()
                    selected = option
                    Library.Flags[text] = selected
                    DropBtn.Text = " " .. option
                    
                    opened = false
                    DropList.Visible = false
                    Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.2)
                    Tween(Arrow, {Rotation = 0}, 0.2)
                    
                    pcall(callback, option)
                end)
            end
            
            DropBtn.MouseButton1Click:Connect(function()
                opened = not opened
                
                if opened then
                    local listSize = #options * 25
                    DropList.Size = UDim2.new(1, -24, 0, listSize)
                    DropList.Visible = true
                    Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 45 + listSize)}, 0.2)
                    Tween(Arrow, {Rotation = 180}, 0.2)
                else
                    DropList.Visible = false
                    Tween(Dropdown, {Size = UDim2.new(1, 0, 0, 35)}, 0.2)
                    Tween(Arrow, {Rotation = 0}, 0.2)
                end
            end)
            
            return Dropdown
        end
        
        return Elements
    end
    
    -- Toast Notification
    function Window:Notify(config)
        config = config or {}
        local title = config.Title or "Notification"
        local message = config.Message or config.Text or ""
        local duration = config.Duration or config.Time or 3
        local notifType = config.Type or "info"
        
        local ToastContainer = Instance.new("Frame")
        ToastContainer.Parent = ScreenGui
        ToastContainer.BackgroundTransparency = 1
        ToastContainer.Position = UDim2.new(1, -280, 0, 15)
        ToastContainer.Size = UDim2.new(0, 270, 0, 70)
        
        local Toast = Instance.new("Frame")
        Toast.Parent = ToastContainer
        Toast.BackgroundColor3 = Colors.Sidebar
        Toast.BorderSizePixel = 0
        Toast.Size = UDim2.new(1, 0, 1, 0)
        Toast.Position = UDim2.new(1, 0, 0, 0)
        
        local ToastCorner = Instance.new("UICorner")
        ToastCorner.CornerRadius = UDim.new(0, 10)
        ToastCorner.Parent = Toast
        
        local iconColor = Colors.Accent
        local iconText = "‚ÑπÔ∏è"
        
        if notifType == "success" then
            iconColor = Colors.Success
            iconText = "‚úì"
        elseif notifType == "warning" then
            iconColor = Colors.Warning
            iconText = "‚ö†"
        elseif notifType == "error" then
            iconColor = Colors.Error
            iconText = "‚úï"
        end
        
        local Icon = Instance.new("TextLabel")
        Icon.Parent = Toast
        Icon.BackgroundTransparency = 1
        Icon.Position = UDim2.new(0, 12, 0, 10)
        Icon.Size = UDim2.new(0, 18, 0, 18)
        Icon.Font = Enum.Font.GothamBold
        Icon.Text = iconText
        Icon.TextColor3 = iconColor
        Icon.TextSize = 16
        
        local TitleLabel = Instance.new("TextLabel")
        TitleLabel.Parent = Toast
        TitleLabel.BackgroundTransparency = 1
        TitleLabel.Position = UDim2.new(0, 38, 0, 10)
        TitleLabel.Size = UDim2.new(1, -48, 0, 18)
        TitleLabel.Font = Enum.Font.GothamBold
        TitleLabel.Text = title
        TitleLabel.TextColor3 = Colors.Text
        TitleLabel.TextSize = 12
        TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
        
        local MessageLabel = Instance.new("TextLabel")
        MessageLabel.Parent = Toast
        MessageLabel.BackgroundTransparency = 1
        MessageLabel.Position = UDim2.new(0, 38, 0, 30)
        MessageLabel.Size = UDim2.new(1, -48, 0, 28)
        MessageLabel.Font = Enum.Font.Gotham
        MessageLabel.Text = message
        MessageLabel.TextColor3 = Colors.TextDark
        MessageLabel.TextSize = 10
        MessageLabel.TextWrapped = true
        MessageLabel.TextXAlignment = Enum.TextXAlignment.Left
        MessageLabel.TextYAlignment = Enum.TextYAlignment.Top
        
        local Progress = Instance.new("Frame")
        Progress.Parent = Toast
        Progress.BackgroundColor3 = iconColor
        Progress.BorderSizePixel = 0
        Progress.Position = UDim2.new(0, 0, 1, -2.5)
        Progress.Size = UDim2.new(1, 0, 0, 2.5)
        
        local ProgressCorner = Instance.new("UICorner")
        ProgressCorner.CornerRadius = UDim.new(0, 10)
        ProgressCorner.Parent = Progress
        
        Tween(Toast, {Position = UDim2.new(0, 0, 0, 0)}, 0.3)
        Tween(Progress, {Size = UDim2.new(0, 0, 0, 2.5)}, duration)
        
        task.wait(duration)
        
        Tween(Toast, {Position = UDim2.new(1, 0, 0, 0)}, 0.3)
        task.wait(0.3)
        ToastContainer:Destroy()
    end
    
    return Window
end

return Library
